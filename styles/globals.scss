@import 'colours';

:root {
    --light-purple: #909EFF;
    --dark-purple: #2d3fb1;

    --light-alt: #dfdfdf;
    --dark-alt: #18181b;
    --navHover: linear-gradient(
        transparent 0%,
        transparent calc(50% - 3px),
        #929de2 calc(50% - 3px),
        #929de2 100%
      );
}

html,
body {
    background: white;
    @media (prefers-color-scheme: 'dark') {
        background: black;
    }
}

code::before,
code::after {
    content: '' !important
}

#__next {
    width: 100%;
    max-width: 42rem;
    margin: 0 auto 1rem auto;
    @media (min-width: 1200px) {
        max-width: 72rem;
    }
}

.four-oh-four {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    @media (max-width: 700px) {
        justify-content: center;
        flex-direction: column;
    }
    text-align: center;
}

.button {
    display: inline-block;
    text-align: center;
    margin-top: 1rem;
    margin-bottom: 1rem;
    padding: 1rem 1.5rem;
    border: none !important;
    border-radius: .5rem;
    background-color: var(--light-alt);
    text-decoration: none;
    @media(prefers-color-scheme: 'dark'){ background-color: var(--dark-alt); }
    &:hover { color: var(--light-purple); }
}

.content,
footer {
    a {
        text-decoration: none;
        border-bottom: 1px solid black;
        @media (prefers-color-scheme: 'dark') {
            border-color: white;
            &:hover {
                color: var(--light-purple) !important;
                border-color: var(--light-purple) !important;
            }
        }
        color: inherit;
        transition: border-color 250ms,
        color 250ms;
        &:hover {
            color: var(--light-purple);
            border-color: var(--light-purple);
        }
    }
}

.content {
    p {
        img {
           max-width: 100%;
           margin: 0 auto;
           display: block;
        }
    } 
}

#timeline {
    * {
        h3,
        .minor,
        h4,
        p { margin: .7rem 0; }
    }

    .eol { border-color: $eol; }
    .active { border-color: $active; }
    .released { border-color: $released; }
    .progress { border-color: $progress; }
}

.minor {
    font-size: .9rem;
    line-height: 1.25rem;
    margin: 0;
    font-weight: normal;
}

.posts, .projects {
    display: grid;
    grid-template-columns: 33% 33% 33%;
    justify-content: space-evenly;
    @media (max-width: 600px) { grid-template-columns: auto !important; }
    @media(max-width: 1200px) { grid-template-columns: 50% 50%; }
    padding-left: 0;
    .post {
        transition: 100ms background-color ease-in-out;
        padding: .75rem 1rem;
        a { transition: 250ms color ease-in-out; }
        .tag {
            background: var(--light-alt);
            margin: .5rem .5rem 0 0;
            padding: .1rem .5rem;
            border-radius: .25rem;
            display: table;
            font-size: .8rem;
            color: black;
        }
        // Tag colours
        .eol, .opinion {
            background-color: $eol-alt;
        }
        .progress {
            background-color: #98a2b1;
            border-color: #98a2b1;
        }
        .active, .education {
            background-color: $active-alt;
        }
        .released, .life {
            background-color: $released-alt;
        }
        .concepts {
            background-color: $concepts-alt;
            border-color: $concepts;
        }

        &:hover, &:focus, &:focus-within {
            .link { &, * {outline: 0;}}
            background-color: var(--light-alt);
            @media(prefers-color-scheme: 'dark'){ background-color: var(--dark-alt); }
        }
    }
}

.skipToMain {
    // Adapted from https://webaim.org/techniques/css/invisiblecontent/#techniques
    background-color: var(--light-alt);
    color: black;
    @media(prefers-color-scheme:'dark') {
        background-color: var(--dark-alt);
        color: white;
    }
    font-weight: 700;
    align-self: center;
    padding: 4px;
    position: absolute;
    transition: transform 0.3s;
    transform: translateY(-250%);
    &:focus-within, &:focus {
        transform: translateY(0%);
    }
}
